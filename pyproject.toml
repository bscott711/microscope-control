# pyproject.toml

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# --- Core Project Metadata ---
[project]
name = "microscope-control"
version = "0.1.0.dev4"
description = "OPM Control System"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
  { name = "Brandon Scott", email = "brandon.scott@sdsmt.edu" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
]

# --- Dependencies ---
dependencies = [
    # Core Microscope Control
    "pymmcore-plus[cli,io]",
    # GUI Framework
    "pyside6",
    "qtpy",
    "magicgui>=0.10.0",
    # Data & Imaging
    "numpy",
    "pillow",
    "tifffile",
    "pyserial>=3.5",
]

[project.optional-dependencies]
# Development dependencies, installed with `uv pip install -e .[dev]`
dev = ["ruff"]

# --- Entry Points & URLs ---
[project.scripts]
microscope-control = "microscope.ui.__main__:main"

[project.urls]
Homepage = "https://github.com/bscott711/microscope-control"

# --- Tool Configuration ---
[tool.hatch.build.targets.wheel]
# This explicitly tells Hatchling where to find the package,
# resolving the auto-discovery mismatch.
packages = ["src/microscope"]

[tool.ruff]
# Set the minimum Python version to target for linting.
target-version = "py39"
exclude = [
    "initial_testing_scripts",
    "docs",
    "tests",
]
line-length = 120

[tool.ruff.lint]
# Rules: https://docs.astral.sh/ruff/rules/
# "F" - Pyflakes | "E" - pycodestyle Error | "W" - pycodestyle Warning
# "I" - isort | "UP" - pyupgrade
select = ["E", "F", "W", "I", "UP"]
ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Use double quotes for strings where possible.
quote-style = "double"
