# pyproject.toml

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
# The name of your package inside the 'src' directory
name = "microscope-control"
version = "0.2.0.dev0"
authors = [
  { name="Brandon Scott", email="brandon.scott@sdsmt.edu" },
]
description = "A modular desktop application for controlling an ASI Tiger-based OPM."
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
]
# Runtime dependencies required to run the application
dependencies = [
    "pyside6",
    "pymmcore-plus[cli,io]",
    "numpy",
    "tifffile",
    "pillow",
    "qtpy",
]

[project.optional-dependencies]
# Development dependencies, installed with `uv pip install -e .[dev]`
dev = [
    "ruff",
]

[project.urls]
Homepage = "https://github.com/bscott711/microscope-control"

[project.scripts]
# FIX: This now correctly points to the 'main' function inside the 'microscope' package.
microscope-control = "microscope.__main__:main"


# --- Tool Configuration ---

[tool.setuptools.packages.find]
# This tells setuptools to look for your package inside the 'src' directory
where = ["src"]


[tool.ruff]
# Set the minimum Python version to target for linting.
target-version = "py39"
exclude = [
    "initial_testing_scripts",
    "docs",        # Exclude documentation files
]

[tool.ruff.lint]
# Rules: https://docs.astral.sh/ruff/rules/
# "F" - Pyflakes | "E" - pycodestyle Error | "W" - pycodestyle Warning
# "I" - isort | "UP" - pyupgrade
select = ["E", "F", "W", "I", "UP"]
ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Use double quotes for strings where possible.
quote-style = "double"
